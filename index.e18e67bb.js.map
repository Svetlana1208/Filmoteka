{"mappings":"AAEA,IAEIA,EAEJ,IAEIC,EAAO,EAEX,IAAIC,EACAC,EAEJ,MAAMC,EAAO,CACTC,KAAMC,SAASC,cAAc,iBAC7BC,QAASF,SAASC,cAAc,YAChCE,WAAYH,SAASC,cAAc,iBACnCG,cAAeJ,SAASC,cAAc,8BACtCI,UAAWL,SAASC,cAAc,0BAClCK,WAAYN,SAASC,cAAc,2BACnCM,UAAWP,SAASC,cAAc,0BAClCO,WAAYR,SAASC,cAAc,2BACnCQ,UAAWT,SAASC,cAAc,0BAClCS,UAAWV,SAASC,cAAc,2BAkFtC,SAASU,EAASC,GACdlB,EAASkB,EAAOC,QAAQC,KAAIC,GACxB,yGACoEA,EAAKC,mEAC3CD,EAAKE,qEACIF,EAAKG,UAAUC,KAAK,WAAWJ,EAAKK,oCAE1ED,KAAK,IAENrB,EAAKI,QAAQmB,mBAAmB,YAAa3B,GAE7CC,GAAQ,C,CAMhB,SAAS2B,KAjFTC,iBACI,aAAaC,MAAM,yGAA+EC,MACjGC,IACC,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MAAM,G,EA4ExBC,GAAqBN,MAAKO,IAC1B,MAAMC,EAAa,GAEnB,IAAKC,OAAOF,EAAKG,OACbF,EAAWC,IAAIE,IAAMF,IAAIG,MA3EjCd,iBACG,aAAaC,MAAM,iGAAuE7B,KAAQ8B,MAChGC,IACC,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAG3B,OADaH,EAASI,MACX,G,EAuEbQ,GAAsBb,MAAKb,IAIvB,IAAI2B,EAEJ,IAAKC,OALL5C,EAAcgB,EACdf,EAAaD,EAAY6C,YACzBC,QAAQC,IAAI/C,GAGAA,EAAYiB,SACpB,IAAK,IAAI+B,EAAI,EAAGA,EAAIJ,IAAItB,UAAU2B,OAAQD,GAAG,EACzCJ,IAAItB,UAAU0B,GAAKX,EAAWO,IAAItB,UAAU0B,IAE5CL,EAAcC,IAAIpB,aAAa0B,MAAM,EAAG,GACxCN,IAAIpB,aAAemB,EAI3B5B,EAASf,EAAY,IAExBmD,OAAOC,GAAUN,QAAQC,IAAIK,IAAO,IAExCD,OAAOC,GAAUN,QAAQC,IAAIK,I,CAzH9BlD,EAAKM,cAAc6C,iBAAiB,SAiIpC,WAA4B,IAhI5BnD,EAAKQ,WAAW2C,iBAAiB,SAqIjC,WACInD,EAAKI,QAAQgD,UAAU,GACvB5B,IACAxB,EAAKO,UAAU8C,UAAUC,OAAO,aAChCtD,EAAKQ,WAAW6C,UAAUE,IAAI,Y,IAxIlCvD,EAAKS,UAAU0C,iBAAiB,SA2IhC,WACInD,EAAKI,QAAQgD,UAAU,GACvB5B,IACAxB,EAAKQ,WAAW6C,UAAUC,OAAO,aACjCtD,EAAKS,UAAU4C,UAAUE,IAAI,Y,IA9IjCvD,EAAKU,WAAWyC,iBAAiB,SAiJjC,WACInD,EAAKI,QAAQgD,UAAU,GACvB5B,IACAxB,EAAKS,UAAU4C,UAAUC,OAAO,aAChCtD,EAAKU,WAAW2C,UAAUE,IAAI,Y,IApJlCvD,EAAKW,UAAUwC,iBAAiB,SAuJhC,WACInD,EAAKI,QAAQgD,UAAU,GACvB5B,IACAxB,EAAKU,WAAW2C,UAAUC,OAAO,aACjCtD,EAAKW,UAAU0C,UAAUE,IAAI,Y,IA7G7B/B,IAbAxB,EAAKO,UAAUiD,YAAc3D,EAC7BG,EAAKO,UAAU8C,UAAUE,IAAI,aAC7BvD,EAAKQ,WAAWgD,YAAc3D,EAAO,EACrCG,EAAKS,UAAU+C,YAAc3D,EAAO,EACpCG,EAAKU,WAAW8C,YAAc3D,EAAO,EACrCG,EAAKW,UAAU6C,YAAc3D,EAAO","sources":["src/index.js"],"sourcesContent":["// import API from \"./js/fetch\";\n\nlet form;\n// let searchQuery;\nlet markup;\nconst key = '4273054ff6f056d7541ef873941254f6';\nlet url;\nlet genres;\nlet page = 1;\nconst perPage = 20;\nlet dataPopular;\nlet pagesCount;\n\nconst refs = {\n    form: document.querySelector('#search__form'),\n    gallery: document.querySelector('.gallery'),\n    searchInfo: document.querySelector('#search__info'),\n    previousPages: document.querySelector('.pagination__previousPages'),\n    firstPage: document.querySelector('.pagination__firstPage'),\n    secondPage: document.querySelector('.pagination__secondPage'),\n    thirdPage: document.querySelector('.pagination__thirdPage'),\n    fourthPage: document.querySelector('.pagination__fourthPage'),\n    fifthPage: document.querySelector('.pagination__fifthPage'),\n    nextPages: document.querySelector('.pagination__nextPages'),\n}\n\n// refs.form.addEventListener('submit', onSearch);\n// refs.btnLoadMore.addEventListener('click', searchNext);\nrefs.previousPages.addEventListener('click', updatePagination);\nrefs.secondPage.addEventListener('click', downloadSecondPage);\nrefs.thirdPage.addEventListener('click', downloadThirdPage);\nrefs.fourthPage.addEventListener('click', downloadFourthPage);\nrefs.fifthPage.addEventListener('click', downloadFifthPage);\n\n\nfirstDownload();\n\n\n\n\n\nasync function fetchRequestGenres() {\n    return await fetch(`https://api.themoviedb.org/3/genre/movie/list?api_key=${key}&language=en-US`).then(\n    (response) => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    }\n  );\n}\n\nasync function fetchRequestPopular() {  \n   return await fetch(`https://api.themoviedb.org/3/trending/movie/day?api_key=${key}&page=${page}`).then(\n    (response) => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      const data = response.json();\n      return data;\n    }\n  )  \n}\n\nfunction displayPagination() {\n    refs.firstPage.textContent = page;\n    refs.firstPage.classList.add('is-active');\n    refs.secondPage.textContent = page + 1;\n    refs.thirdPage.textContent = page + 2;\n    refs.fourthPage.textContent = page + 3;\n    refs.fifthPage.textContent = page + 4;\n}\n\n\n\n\n\nfunction firstDownload() {\n    downloadPage();\n    displayPagination();\n}\n\n\n\n\nfunction onSearch(e) {\n    e.preventDefault();\n    refs.gallery.innerHTML = \"\";\n    refs.btnLoadMore.classList.add('is-hidden');\n    form = e.currentTarget;\n    searchQuery = form.elements.searchQuery.value;\n    paramsPages.page = 1;\n\n    API.fetchRequest(searchQuery)\n        .then(result => {\n            if(result.total === 0) {\n                refs.btnLoadMore.classList.add('is-hidden');\n                refs.searchInfo.textContent = \"Search result not successful. Enter the correct movie name and\";\n            }\n            else {\n                onMarkUp(result);\n            };\n        })\n}\n\nfunction onMarkUp(result) {\n    markup = result.results.map(card =>\n        `<li class=\"gallery__item\">\n            <img class=\"film__poster\" src=\"https://image.tmdb.org/t/p/w500${card.poster_path}\" alt=\"poster\">\n            <h3 class=\"film__title\">${card.original_title}</h3>\n            <p class=\"film__characteristics\">${card.genre_ids.join(\", \")} | ${card.release_date}</p>\n        </li>`)\n        .join(\"\");\n\n        refs.gallery.insertAdjacentHTML('beforeend', markup);\n\n        page += 1;\n}\n\n\n\n\nfunction downloadPage() {\n    fetchRequestGenres().then(resp => {\n    const genresList = {};\n    \n    for (gen of resp.genres) {\n        genresList[gen.id] = gen.name;\n    }\n\n    fetchRequestPopular().then(result => {\n        dataPopular = result;\n        pagesCount = dataPopular.total_pages;\n        console.log(dataPopular);\n        let releaseYear;\n\n        for (pop of dataPopular.results) {\n            for (let i = 0; i < pop.genre_ids.length; i+=1) {\n                pop.genre_ids[i] = genresList[pop.genre_ids[i]];\n\n                releaseYear = pop.release_date.slice(0, 4);\n                pop.release_date = releaseYear;\n            }\n        };\n\n        onMarkUp(dataPopular);\n    })\n    .catch((error) => console.log(error));\n})\n.catch((error) => console.log(error));\n}\n\n\n\n\n\n\nfunction updatePagination() {\n}\n\n\n\nfunction downloadSecondPage() {\n    refs.gallery.innerHTML=\"\";\n    downloadPage();\n    refs.firstPage.classList.remove('is-active');\n    refs.secondPage.classList.add('is-active');\n}\n\nfunction downloadThirdPage() {\n    refs.gallery.innerHTML=\"\";\n    downloadPage();\n    refs.secondPage.classList.remove('is-active');\n    refs.thirdPage.classList.add('is-active');\n}\n\nfunction downloadFourthPage() {\n    refs.gallery.innerHTML=\"\";\n    downloadPage();\n    refs.thirdPage.classList.remove('is-active');\n    refs.fourthPage.classList.add('is-active');\n}\n\nfunction downloadFifthPage() {\n    refs.gallery.innerHTML=\"\";\n    downloadPage();\n    refs.fourthPage.classList.remove('is-active');\n    refs.fifthPage.classList.add('is-active');\n}\n\n\n{/* <img src=\"https://image.tmdb.org/t/p/w280${card.poster_path}\" alt=\"poster\"> */}\n\n\n// function searchNext() {\n//     API.fetchRequest(searchQuery)\n//     .then(result => {\n//         totalPages = result.totalHits / paramsPages.perPage + 1;\n//         if(paramsPages.page > totalPages) {\n//             refs.btnLoadMore.classList.add('is-hidden');\n//         }             \n        \n//         onMarkUp(result)}\n//     );\n// }"],"names":["$1f0dc3b9307be026$var$markup","$1f0dc3b9307be026$var$page","$1f0dc3b9307be026$var$dataPopular","$1f0dc3b9307be026$var$pagesCount","$1f0dc3b9307be026$var$refs","form","document","querySelector","gallery","searchInfo","previousPages","firstPage","secondPage","thirdPage","fourthPage","fifthPage","nextPages","$1f0dc3b9307be026$var$onMarkUp","result","results","map","card","poster_path","original_title","genre_ids","join","release_date","insertAdjacentHTML","$1f0dc3b9307be026$var$downloadPage","async","fetch","then","response","ok","Error","status","json","$1f0dc3b9307be026$var$fetchRequestGenres","resp","genresList","gen","genres","id","name","$1f0dc3b9307be026$var$fetchRequestPopular","releaseYear","pop","total_pages","console","log","i","length","slice","catch","error","addEventListener","innerHTML","classList","remove","add","textContent"],"version":3,"file":"index.e18e67bb.js.map"}