{"mappings":"AAEA,IAEIA,EAGJ,IAGIC,EAAc,CACdC,KAAM,EACNC,QAAS,IAGb,MAAMC,EAAO,CACTC,KAAMC,SAASC,cAAc,iBAC7BC,QAASF,SAASC,cAAc,YAChCE,WAAYH,SAASC,cAAc,iBACnCG,YAAaJ,SAASC,cAAc,eA8ExC,SAASI,EAASC,GACdZ,EAASY,EAAOC,QAAQC,KAAIC,GACxB,6LAG2DA,EAAKC,wJAG9BD,EAAKE,yEACIF,EAAKG,UAAUC,KAAK,WAAWJ,EAAKK,oCAE9ED,KAAK,IAENf,EAAKI,QAAQa,mBAAmB,YAAarB,GAC7CI,EAAKM,YAAYY,UAAUC,OAAO,aAElCtB,EAAYC,MAAQ,C,CA3DjBsB,MAAM,yGAA+EC,MAC3FC,IACC,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MAAM,IA/BPL,MAAKM,IACtB,MAAMC,EAAa,GAEnB,IAAKC,OAAOF,EAAKG,OACbF,EAAWC,IAAIE,IAAMF,IAAIG,KAmCvBZ,MAAM,4FAAkEC,MAC7EC,IACC,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MAAM,IArCFL,MAAKb,IACvB,IAAIyB,EAEJ,IAAKC,OAAO1B,EAAOC,QACf,IAAK,IAAI0B,EAAI,EAAGA,EAAID,IAAIpB,UAAUsB,OAAQD,GAAG,EACzCD,IAAIpB,UAAUqB,GAAKP,EAAWM,IAAIpB,UAAUqB,IAE5CF,EAAcC,IAAIlB,aAAaqB,MAAM,EAAG,GACxCH,IAAIlB,aAAeiB,EAI3B1B,EAASC,EAAO,IACnB8B,OAAOC,GAAUC,QAAQC,IAAIF,IAAO,IAExCD,OAAOC,GAAUC,QAAQC,IAAIF","sources":["src/index.js"],"sourcesContent":["// import API from \"./js/fetch\";\n\nlet form;\n// let searchQuery;\nlet markup;\n// let totalPages;\nconst key = '4273054ff6f056d7541ef873941254f6';\nlet url;\nlet genres;\n\nlet paramsPages = {\n    page: 0,\n    perPage: 20\n};\n\nconst refs = {\n    form: document.querySelector('#search__form'),\n    gallery: document.querySelector('.gallery'),\n    searchInfo: document.querySelector('#search__info'),\n    btnLoadMore: document.querySelector('.load-more'),\n}\n\n// refs.form.addEventListener('submit', onSearch);\n// refs.btnLoadMore.addEventListener('click', searchNext);\n\n\n\n\nfetchRequestGenres().then(resp => {\n    const genresList = {};\n    \n    for (gen of resp.genres) {\n        genresList[gen.id] = gen.name;\n    }\n\n    fetchRequestPopular().then(result => {\n        let releaseYear;\n\n        for (pop of result.results) {\n            for (let i = 0; i < pop.genre_ids.length; i+=1) {\n                pop.genre_ids[i] = genresList[pop.genre_ids[i]];\n\n                releaseYear = pop.release_date.slice(0, 4);\n                pop.release_date = releaseYear;\n            }\n        };\n\n        onMarkUp(result)})\n    .catch((error) => console.log(error));\n})\n.catch((error) => console.log(error));\n\n\nfunction fetchRequestGenres() {\n    return fetch(`https://api.themoviedb.org/3/genre/movie/list?api_key=${key}&language=en-US`).then(\n    (response) => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    }\n  );\n}\n\nfunction fetchRequestPopular() {\n//    url = `https://api.themoviedb.org/3/trending/movie/day?api_key=${key}`\n   \n   return fetch(`https://api.themoviedb.org/3/trending/movie/day?api_key=${key}`).then(\n    (response) => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    }\n  );\n}\n\nfunction onSearch(e) {\n    e.preventDefault();\n    refs.gallery.innerHTML = \"\";\n    refs.btnLoadMore.classList.add('is-hidden');\n    form = e.currentTarget;\n    searchQuery = form.elements.searchQuery.value;\n    paramsPages.page = 1;\n\n    API.fetchRequest(searchQuery)\n        .then(result => {\n            if(result.total === 0) {\n                refs.btnLoadMore.classList.add('is-hidden');\n                refs.searchInfo.textContent = \"Search result not successful. Enter the correct movie name and\";\n            }\n            else {\n                onMarkUp(result);\n            };\n        })\n}\n\nfunction onMarkUp(result) {\n    markup = result.results.map(card =>\n        `<li class=\"gallery__item\">\n                <div class=\"film__box\">\n                    <picture class=\"film__poster\">\n                        <img src=\"https://image.tmdb.org/t/p/w300${card.poster_path}\" alt=\"poster\" width=\"280\" height=\"402\">\n                    </picture>\n                </div>\n                <h3 class=\"film__title\">${card.original_title}</h3>\n                <p class=\"film__characteristics\">${card.genre_ids.join(\", \")} | ${card.release_date}</p>\n        </li>`)\n        .join(\"\");\n\n        refs.gallery.insertAdjacentHTML('beforeend', markup);\n        refs.btnLoadMore.classList.remove('is-hidden');\n\n        paramsPages.page += 1;\n}\n\n{/* <img src=\"https://image.tmdb.org/t/p/w280${card.poster_path}\" alt=\"poster\"> */}\n\n\n// function searchNext() {\n//     API.fetchRequest(searchQuery)\n//     .then(result => {\n//         totalPages = result.totalHits / paramsPages.perPage + 1;\n//         if(paramsPages.page > totalPages) {\n//             refs.btnLoadMore.classList.add('is-hidden');\n//         }             \n        \n//         onMarkUp(result)}\n//     );\n// }"],"names":["$1f0dc3b9307be026$var$markup","$1f0dc3b9307be026$var$paramsPages","page","perPage","$1f0dc3b9307be026$var$refs","form","document","querySelector","gallery","searchInfo","btnLoadMore","$1f0dc3b9307be026$var$onMarkUp","result","results","map","card","poster_path","original_title","genre_ids","join","release_date","insertAdjacentHTML","classList","remove","fetch","then","response","ok","Error","status","json","resp","genresList","gen","genres","id","name","releaseYear","pop","i","length","slice","catch","error","console","log"],"version":3,"file":"index.8a25110f.js.map"}